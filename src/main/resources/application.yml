spring:
  ########################################################
  ###Druid -- mysql的数据库配置.
  ########################################################
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/test?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true
      username: root
      password: root
      driver-class-name: com.mysql.jdbc.Driver
      #下面为连接池补充设置应用到上面所有数据源中
      #初始化大小,最小,最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      #配置获取连接等待超时的时间
      maxWait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      web-stat-filter:
        url-pattern: /*
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico
      stat-view-servlet:
        url-pattern: /druid/*
        #登陆账号密码
        login-username: guoadmin
        login-password: guoadmin
        #是否可以重置
        reset-enable: false
        #白名单
        #allow: 127.0.0.1
        #黑名单
        #deny: 127.0.0.1




########################################################
###mybatis配置.
########################################################

mybatis:
    mapperLocations: classpath:mybatis/*/*.xml
    # 给实体类起别名
    type-aliases-package: com.springboot.backstage.entity

########################################################
###分页插件
########################################################
pagehelper:
  helper-dialect: mysql
  #当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。
  reasonable: true
  #支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页
  support-methods-arguments: true
  #为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable
  params: count=countSql
